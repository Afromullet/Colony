TODO, need to simplify the damage so that when someone who uses the code does not have to both apply damage to the limb and the body in whatever subclass of Bodyype they are implementing

_____________________
BaseCreature Class


The BaseCreature class will allow various kinds of creatures to be added with different body types. The  class contains the data we need to draw the class (Entitytile, which handles all drawing) and creature statistics. The body on the other hand defines what limbs the creature consists of. There's no need to add the Base Creature as an abstract class, as the only thing which will vary is the body.

    EntityTile has its own position. The creature position must match up with the EntityTile, so both are updated whenever the creature move. TODO, remove that behavior


TODO
Add checks to ensure the body is initialized

    Body is the abstract class.
_____________________
EntityTile Class



Handles everyhing related to drawing. This includes the vertices and the texture

_____________________

Body class

The abstract class representing a body consists only of a Head and Chest. Any body tye, such as HumanoidBody and QuadrupedBody are subclasses which add whatever limbs such a creature requires. A humanoid for example has two arms and two legs, a quadruped has four legs.


Currently contains the virtual function AttackRandomBodyPart, which, when implemneted correctly, selects a random body part to be attacked. Not worrying about targetting body parts, because that would be tedious for the player.

The body parts are limbs and appendages. I've not implemented them as abstract classes. Currently, I do not see any need. (Although I should add some checking to ensure that the user does not misuse those classes). Arms and legs, for example are sublclasses of limb, and hands and feet subclasses of appendage

_____________________

TODO

To model health..each body part should have a "HealthComponent". Implement as a abstract class so it can be easily expanded
